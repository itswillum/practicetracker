{"version":3,"sources":["components/PracticeFormBackdrop.js","components/PracticeForm.js","components/FormHandler.js","components/PracticeFormModal.js","components/CreateLog.js","components/TableEntry.js","components/MainPage.js","App.js","reportWebVitals.js","index.js","components/NewMeetupForm.module.css"],"names":["PracticeFormBackdrop","props","react_default","a","createElement","className","onClick","onCancel","PracticeForm","dateInputRef","useRef","descriptionInputRef","durationInputRef","_useState","useState","Date","_useState2","Object","slicedToArray","startDate","setStartDate","classes","form","onSubmit","event","preventDefault","enteredMonth","getMonth","practiceData","day","getDate","month","duration","current","value","description","console","log","onAddPractice","control","htmlFor","react_datepicker_min_default","selected","onChange","date","ref","type","id","required","rows","actions","FormHandler","components_PracticeForm","fetch","method","body","JSON","stringify","headers","Content-Type","PracticeFormModal","components_FormHandler","CreateLog","modalIsOpen","setModalIsOpen","formClose","components_PracticeFormModal","onConfirm","submitHandler","components_PracticeFormBackdrop","TableEntry","parseInt","toString","MainPage","isLoading","setIsLoading","_useState3","_useState4","loadedPracticeData","setLoadedPracticeData","useEffect","then","response","json","data","p","key","practice","objectSpread","push","components_CreateLog","map","d","components_TableEntry","App","components_MainPage","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App","module","exports"],"mappings":"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","file":"static/js/main.cd00e533.chunk.js","sourcesContent":["import React from \"react\";\nfunction PracticeFormBackdrop(props) {\n  return <div className='backdrop' onClick={props.onCancel} />;\n}\n\nexport default PracticeFormBackdrop;\n","import React, { useState } from \"react\";\nimport { useRef } from \"react\";\nimport classes from \"./NewMeetupForm.module.css\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nfunction PracticeForm(props) {\n  const dateInputRef = useRef();\n  const descriptionInputRef = useRef();\n  const durationInputRef = useRef();\n  const [startDate, setStartDate] = useState(new Date());\n  //below will handle interaction with backend api\n  //this function stores inputs after submission\n  function submitHandler(event) {\n    event.preventDefault();\n\n    const enteredMonth = startDate.getMonth();\n    const enteredDay = startDate.getDate();\n    const enteredDuration = durationInputRef.current.value;\n    const enteredDescription = descriptionInputRef.current.value;\n\n    const practiceData = {\n      day: enteredDay,\n      month: enteredMonth,\n      duration: enteredDuration,\n      description: enteredDescription,\n    };\n\n    console.log(practiceData);\n    \n    props.onAddPractice(practiceData);\n  }\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor=\"date\">Date</label>\n        <DatePicker\n          selected={startDate}\n          onChange={(date) => setStartDate(date)}\n          ref={dateInputRef}\n        />\n        <label htmlFor=\"duration\">How many minutes you practiced for: </label>\n        <input type=\"number\" ref={durationInputRef} />\n        <label htmlFor=\"description\">Describe what you practiced:</label>\n        <textarea\n          id=\"description\"\n          required\n          rows=\"5\"\n          ref={descriptionInputRef}\n        ></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n}\n\nexport default PracticeForm;\n","import PracticeForm from \"./PracticeForm\";\nimport React from \"react\";\nfunction FormHandler() {\n  function addPracticeHandler(practiceData) {\n    fetch(\n      \"https://computer-science-ia-53874-default-rtdb.firebaseio.com/practices.json\",\n      {\n        method: \"POST\",\n        body: JSON.stringify(practiceData),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n  }\n  return <PracticeForm onAddPractice={addPracticeHandler} />;\n}\n\nexport default FormHandler;\n","import React from \"react\";\nimport FormHandler from \"./FormHandler\";\nfunction PracticeFormModal(props) {\n  function cancelHandler() {\n    props.onCancel();\n    //this is an alternative to handling different things within a self-made component\n  }\n  //these functions we create can be forwarded if necessary (like we did with the backdrop) or executed right in the file whose state they affect.\n  return (\n    <div className=\"modal\">\n      <p>Practice Information (for now, click submit once and then close)</p>\n      <FormHandler />\n      <button className=\"btn btn--alt\" onClick={cancelHandler}>\n        Close\n      </button>\n    </div>\n  );\n}\n\nexport default PracticeFormModal;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport PracticeFormBackdrop from \"./PracticeFormBackdrop\";\nimport PracticeFormModal from \"./PracticeFormModal\";\nimport PracticeForm from \"./PracticeForm\";\nfunction CreateLog() {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  //This is a react hook, which can only be called in react component functions (for our purposes)\n  //argument passed in here is an initial value for the state. It'll be changed depending on what sequences of buttons the user clicks later.\n  //useState returns an array with exactly 2 elements, so that's how we'll define it\n  //first element contains currently stored value\n  //second element contains a function that is used to change the value of the function, hence the name\n  function formOpen() {\n    console.log(\"clicked the add button\");\n    setModalIsOpen(true);\n  }\n  function formClose() {\n    setModalIsOpen(false);\n  }\n  return (\n    <div>\n      <button className='btn' onClick={formOpen}>\n        Add practice\n      </button>\n      {modalIsOpen && (\n        <PracticeFormModal onCancel={formClose} onConfirm={formClose} submitHandler={PracticeForm.submitHandler}/>\n      )}\n      {modalIsOpen && <PracticeFormBackdrop onCancel={formClose} />}\n    </div>\n  );\n}\n//{modalIsOpen && <PracticeFormModal />} means that if the first is true, then render the modal (the second is returned). otherwise, do nothing. This operator works because the second will\nexport default CreateLog;\n","import React from \"react\";\nimport \"./TableEntry.css\";\n\nfunction TableEntry(props) {\n  return (\n    <div className=\"container\">\n      <div>\n        {(parseInt(props.month) + 1).toString()}/\n        {(parseInt(props.date) + 1).toString()}\n      </div>\n      <div>{props.duration}</div>\n      <div className=\"description\">{props.description}</div>\n    </div>\n  );\n}\n\nexport default TableEntry;\n","import React from \"react\";\nimport CreateLog from \"./CreateLog\";\nimport { useState, useEffect } from \"react\";\nimport TableEntry from \"./TableEntry\";\nimport \"./MainPage.css\";\n\nfunction MainPage() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadedPracticeData, setLoadedPracticeData] = useState([]);\n\n  useEffect(() => {\n    fetch(\n      \"https://computer-science-ia-53874-default-rtdb.firebaseio.com/practices.json\"\n    )\n      .then((response) => {\n        return response.json(); //exists as a default function, but returns a promise\n      })\n      .then((data) => {\n        const p = [];\n\n        for (const key in data) {\n          const practice = {\n            id: key,\n            ...data[key],\n          };\n          p.push(practice);\n        }\n        setIsLoading(false);\n        setLoadedPracticeData(p);\n      });\n  }, []);\n\n  if (isLoading) {\n    //currently, this is triggering because there's no response from the database. however, use ! to get the normal return when hard coding\n    return (\n      <div>\n        <CreateLog />\n        <p>Loading...</p>\n      </div>\n    );\n  }\n  return (\n    <div>\n      <CreateLog />\n      <div>\n        <div className=\"header\">\n          <h1>Date</h1>\n          <h1>Minutes</h1>\n          <h1>Description</h1>\n        </div>\n        {loadedPracticeData.map((d) => {\n          return (\n            <div>\n              <TableEntry\n                date={d[\"day\"]}\n                month={d[\"month\"]}\n                description={d[\"description\"]}\n                duration={d[\"duration\"]}\n              />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\nexport default MainPage;\n","import \"./App.css\";\nimport React from \"react\";\nimport MainPage from \"./components/MainPage\";\nfunction App() {\n  return (\n    <div>\n      <h1> Practice Tracker </h1>\n      <MainPage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewMeetupForm_form__vDFXx\",\"control\":\"NewMeetupForm_control__30BE_\",\"actions\":\"NewMeetupForm_actions__2Vnu0\"};"],"sourceRoot":""}